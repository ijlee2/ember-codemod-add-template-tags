import type {
  CodemodOptions,
  Options,
  Packages,
} from '../../../src/types/index.js';

const codemodOptions: CodemodOptions = {
  componentStructure: 'flat',
  convert: new Set(['components', 'routes', 'tests']),
  folder: '',
  projectRoot: 'tmp/my-v2-app',
};

const inputProject = {
  app: {
    components: {
      ui: {
        form: {
          'checkbox.hbs': ``,
          'checkbox.ts': [
            `import Component from '@glimmer/component';`,
            ``,
            `interface UiFormCheckboxSignature {}`,
            ``,
            `export default class UiFormCheckbox extends Component<UiFormCheckboxSignature> {}`,
            ``,
            `declare module '@glint/environment-ember-loose/registry' {`,
            `  export default interface Registry {`,
            `    'Ui::Form::Checkbox': typeof UiFormCheckbox;`,
            `    'ui/form/checkbox': typeof UiFormCheckbox;`,
            `  }`,
            `}`,
            ``,
          ].join('\n'),
          'field.hbs': ``,
          'field.ts': [
            `import Component from '@glimmer/component';`,
            ``,
            `interface UiFormFieldSignature {}`,
            ``,
            `export default class UiFormField extends Component<UiFormFieldSignature> {}`,
            ``,
          ].join('\n'),
          'information.hbs': ``,
          'information.ts': [
            `import templateOnlyComponent from '@ember/component/template-only';`,
            ``,
            `interface UiFormInformationSignature {}`,
            ``,
            `const UiFormInformation = templateOnlyComponent<UiFormInformationSignature>();`,
            ``,
            `export default UiFormInformation;`,
            ``,
            `declare module '@glint/environment-ember-loose/registry' {`,
            `  export default interface Registry {`,
            `    'Ui::Form::Information': typeof UiFormInformation;`,
            `    'ui/form/information': typeof UiFormInformation;`,
            `  }`,
            `}`,
            ``,
          ].join('\n'),
          'input.hbs': ``,
          'input.js': [
            `import Component from '@glimmer/component';`,
            ``,
            `export default class UiFormInput extends Component {}`,
            ``,
          ].join('\n'),
          'number.gts': ``,
          'select.hbs': ``,
          'select.ts': [
            `import Component from '@glimmer/component';`,
            ``,
            `interface UiFormSelectSignature {}`,
            ``,
            `export default class UiFormSelect extends Component<UiFormSelectSignature> {}`,
            ``,
          ].join('\n'),
          'textarea.gjs': ``,
        },
        'form.hbs': ``,
        'form.ts': [
          `import Component from '@glimmer/component';`,
          ``,
          `interface UiFormSignature {}`,
          ``,
          `export default class UiForm extends Component<UiFormSignature> {}`,
          ``,
        ].join('\n'),
        'page.hbs': ``,
        'page.js': [
          `import templateOnlyComponent from '@ember/component/template-only';`,
          ``,
          `const UiPage = templateOnlyComponent();`,
          ``,
          `export default UiPage;`,
          ``,
        ].join('\n'),
      },
      'navigation-menu.hbs': '',
      'select-locale.hbs': '',
      'select-locale.js': [
        `import Component from '@glimmer/component';`,
        ``,
        `export default class SelectLocale extends Component {}`,
        ``,
      ].join('\n'),
    },
    templates: {
      'application.hbs': [
        `<header>`,
        `  <NavigationMenu />`,
        `</header>`,
        ``,
        `<main>`,
        `  {{outlet}}`,
        `</main>`,
      ].join('\n'),
      'index.hbs': `<SelectLocale />`,
    },
  },
  tests: {
    integration: {
      components: {
        ui: {
          form: {
            'checkbox-test.ts': [
              `import {`,
              `  render,`,
              `  type TestContext as BaseTestContext,`,
              `} from '@ember/test-helpers';`,
              `import { hbs } from 'ember-cli-htmlbars';`,
              `import { UiForm } from 'my-addon/test-support';`,
              `import { setupRenderingTest } from 'my-v2-app/tests/helpers';`,
              `import { module, test } from 'qunit';`,
              ``,
              `interface TestContext extends BaseTestContext {`,
              `  parent: UiForm;`,
              `}`,
              ``,
              `module('Integration | Component | ui/form/checkbox', function (hooks) {`,
              `  setupRenderingTest(hooks);`,
              ``,
              `  hooks.beforeEach(function (this: TestContext) {`,
              `    this.parent = new UiForm();`,
              `  });`,
              ``,
              `  test('it renders', async function (this: TestContext, assert) {`,
              `    await render<TestContext>(`,
              `      hbs\``,
              `        <Ui::Form::Checkbox`,
              `          @data={{this.parent.data}}`,
              `          @key="subscribe"`,
              `          @label="Subscribe to The Ember Times?"`,
              `          @onUpdate={{this.parent.updateData}}`,
              `        />`,
              `      \`,`,
              `    );`,
              ``,
              `    assert.ok(true);`,
              `  });`,
              `});`,
              ``,
            ].join('\n'),
            'field-test.ts': '',
            'information-test.ts': '',
            'input-test.gjs': '',
            'number-test.gts': '',
            'select-test.gts': '',
            'textarea-test.js': [
              `import { render } from '@ember/test-helpers';`,
              `import { hbs } from 'ember-cli-htmlbars';`,
              `import { setupRenderingTest } from 'my-v2-app/tests/helpers';`,
              `import { module, test } from 'qunit';`,
              ``,
              `module('Integration | Component | ui/form/textarea', function (hooks) {`,
              `  setupRenderingTest(hooks);`,
              ``,
              `  hooks.beforeEach(function () {`,
              `    this.data = {`,
              `      email: 'zoey@emberjs.com',`,
              `      message: 'I ðŸ§¡ container queries!',`,
              `      name: 'Zoey',`,
              `      subscribe: false,`,
              `    };`,
              ``,
              `    this.updateData = () => {`,
              `      // Do nothing`,
              `    };`,
              `  });`,
              ``,
              `  test('it renders', async function (assert) {`,
              `    await render(`,
              `      hbs\``,
              `        <Ui::Form::Textarea`,
              `          @data={{this.data}}`,
              `          @key="message"`,
              `          @label="Message"`,
              `          @onUpdate={{this.updateData}}`,
              `        />`,
              `      \`,`,
              `    );`,
              ``,
              `    assert.ok(true);`,
              `  });`,
              `});`,
              ``,
            ].join('\n'),
          },
          'form-test.ts': '',
          'page-test.gjs': '',
        },
        'navigation-menu-test.js': '',
        'select-locale-test.js': '',
      },
    },
  },
  'package.json': JSON.stringify({
    name: 'my-v2-app',
    version: '1.0.0',
    devDependencies: {
      '@embroider/vite': '^1.2.0',
      'ember-source': '~6.7.0',
    },
  }),
};

const options: Options = {
  componentStructure: 'flat',
  convert: {
    components: true,
    routes: true,
    tests: true,
  },
  folder: '',
  projectRoot: 'tmp/my-v2-app',
};

const packages: Packages = new Map([
  [
    'my-v2-app',
    {
      filesWithHBS: {
        components: [
          'app/components/navigation-menu.hbs',
          'app/components/select-locale.hbs',
          'app/components/ui/form.hbs',
          'app/components/ui/form/checkbox.hbs',
          'app/components/ui/form/field.hbs',
          'app/components/ui/form/information.hbs',
          'app/components/ui/form/input.hbs',
          'app/components/ui/form/select.hbs',
          'app/components/ui/page.hbs',
        ],
        routes: ['app/templates/application.hbs', 'app/templates/index.hbs'],
        tests: [
          'tests/integration/components/navigation-menu-test.js',
          'tests/integration/components/select-locale-test.js',
          'tests/integration/components/ui/form-test.ts',
          'tests/integration/components/ui/form/checkbox-test.ts',
          'tests/integration/components/ui/form/field-test.ts',
          'tests/integration/components/ui/form/information-test.ts',
          'tests/integration/components/ui/form/textarea-test.js',
        ],
      },
      filesWithTemplateTag: {
        components: [],
        routes: [],
        tests: [],
      },
      hasEmberRouteTemplate: false,
      packageRoot: 'tmp/my-v2-app',
      packageType: 'v2-app',
    },
  ],
]);

export { codemodOptions, inputProject, options, packages };
